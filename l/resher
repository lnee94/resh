#bash-lib-o
id=("resher" "2.31" "02f31abd-29ab-447f-873a-c04d7963874e" "https://raw.githubusercontent.com/lnee94/resh/main/l/resher" "4" )
deps=()
defaltrepo="https://raw.githubusercontent.com/lnee94/resh/main/l"
###init-o
eval "$HOOK";RESHPACKAGES+=("$(set|grep ^id=);$(set|grep ^arg=)")
shopt -s expand_aliases
if [ "x$REPO" = "x" ];then REPO=$defaltrepo ;fi;depin="resher"
if [ "$(type -t resher)" != "function" ];then depinst(){ [ "$#" = "0" ] ||eval "arg=$2;""$(curl -s $REPO/$1)";};depin="depinst";fi
eval "$(echo ${deps[@]}|tr \  \\n |sed -e '/^$/d' | awk "{print \"$depin \"\$1}" )
$(set|grep "^id=");$(set|grep "^arg=") #;$(set|grep "^deps=" ) "
###init-c
###code-o
case $arg in
  
  version)
  echo "${id[1]}"
  ;;
  help)
    echo "a bash repo manager
    
    usage 
    resher foobar args
    resher -f /path/to/file foobar args
    resher -h OR resher --help shows this
    "
    ;;
    
  remove)
    unset resher
    ;;
   *) 


resher(){
oneuue(){
    alias $1="$2 ""
alias $1=\"\" "
    
    }




oneuue dashe "usefile=echo"
oneuue filee "usefile=echo
endfile=\>\> 
endto=\$im"
oneuue reshinstall "usefile=echo
endfile=\>\> 
endto=$HOME/.resher
echo \"source $HOME/.resher\" >> $HOME/.bashrc"
 
getfile="curl -s "
usefile="eval"
endfile="" 
endto=""


help="a bash repo manager
    
    usage 
    resher foobar args
    resher -f /path/to/file foobar args
    resher -h OR resher --help shows this
    "
    
    
    
    
fa=()


flags=("-h" "--help" "-e" "-E" "-f=*" "--install-resher"  )
flagdo=("echo \"\$help\" " "echo \"\$help\" " "dashe" "getfile=echo\ ; usefile=echo" " filee" "fa+=(resher) ;  reshinstall"  )
eval "hookid=("fba5f8d4-35df-4db9-9bbb-b4743eb0c95d" ) ; $HOOK"
flags+=("*") ; flagdo+=("fa+=(\$in)")

###arghand
flagcount=${#flags[@]}
    il=1
while [ $il != $(($# +1 )) ]
do
i=0
argnum=$il
out="case \$$argnum in"

while [ $i != $flagcount  ]
do 

out="$out""
    ${flags[$i]})
    in=\$$argnum
    im=\$(echo \$in | tail -c \$(( \$(echo \$in | wc -c) - \$(echo ${flags[$i]} | wc -c) + 2)) )
    ${flagdo[$i]}
    ;;"


i=$(($i + 1 )) ;done
out="$out""
esac"

eval "$out"
il=$(($il + 1 )) ;done
###arghand


# echo ${fa[*]} 

eval "hookid=("d7c29ac8-dff5-4dc6-b01d-88d77b74c599" ) ; $HOOK"
i=1
until [ "$(echo "${fa[@]}" | awk -F, "{print \$$i}")" = "" ] 
do
arg1="$(echo "${fa[*]}" | awk -F, "{print \$$i}" | awk '{print $1}')"
arg2="$(echo "${fa[*]}" | awk -F, "{print \$$i}" | awk '{print $2}')"
eval '$usefile "arg=\"$arg2\" ; ""$($getfile  $REPO/$arg1)" '"$endfile""$endto"

i=$(($i+1)) ;done





}
;;
esac
###code-c
###exit-o
unset arg
###exit-c
###bash-lib-c
